name: Build and push Docker image

permissions:
  packages: write

on:
  push:
    tags:
      - "v*"

jobs:
  ci:
    uses: ./.github/workflows/ci-nebula.yaml

  build:
    runs-on: ${{ matrix.os }}
    needs: ci
    strategy:
      fail-fast: false
      matrix:
        app: [authority, authorization, backbone]
        os: [ubuntu-latest, linux-arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set release version
        id: set_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (ARM64)
        uses: docker/build-push-action@v6
        if: ${{ matrix.os == 'linux-arm64' }}
        with:
          context: .
          file: ./crates/nebula-${{ matrix.app }}/Dockerfile
          platforms: linux/arm64/v8
          push: true
          tags: |
            ghcr.io/cremithq/nebula-${{ matrix.app }}:${{ steps.set_version.outputs.VERSION }}
            ghcr.io/cremithq/nebula-${{ matrix.app }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push (AMD64)
        uses: docker/build-push-action@v6
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          context: .
          file: ./crates/nebula-${{ matrix.app }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/cremithq/nebula-${{ matrix.app }}:${{ steps.set_version.outputs.VERSION }}
            ghcr.io/cremithq/nebula-${{ matrix.app }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
