"use strict";(self.webpackChunknebula_docs=self.webpackChunknebula_docs||[]).push([[4513],{3068:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=t(6070),i=t(1503),l=t(1844);const r={},s="nebula",c={id:"cli/command/index",title:"nebula",description:"The nebula command-line interface (CLI) is a tool that allows you to interact with the Nebula services.",source:"@site/versioned_docs/version-0.0.1/cli/command/index.mdx",sourceDirName:"cli/command",slug:"/cli/command/",permalink:"/nebula/docs/cli/command/",draft:!1,unlisted:!1,editUrl:"https://github.com/CremitHQ/nebula/tree/main/docs/docs/versioned_docs/version-0.0.1/cli/command/index.mdx",tags:[],version:"0.0.1",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/nebula/docs/cli/install"},next:{title:"Config",permalink:"/nebula/docs/cli/command/config"}},a={},d=[{value:"Global Flags",id:"global-flags",level:2},{value:"Subcommands",id:"subcommands",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"nebula",children:(0,o.jsx)(n.code,{children:"nebula"})})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"nebula"})," command-line interface (CLI) is a tool that allows you to interact with the Nebula services.\nThis guide provides an overview of the ",(0,o.jsx)(n.code,{children:"nebula"})," CLI and its subcommands."]}),"\n",(0,o.jsx)(n.h2,{id:"global-flags",children:"Global Flags"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"nebula"})," CLI supports the following global flags:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--config"})," or ",(0,o.jsx)(n.code,{children:"-c"}),": Specifies the path to the configuration file. This flag is optional. If not provided, the CLI uses the default configuration file. Alternatively, you can set the ",(0,o.jsx)(n.code,{children:"NEBULA_CONFIG"})," environment variable to specify the configuration file path."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--profile"})," or ",(0,o.jsx)(n.code,{children:"-p"}),": Specifies the profile to use. This flag is optional and defaults to ",(0,o.jsx)(n.code,{children:"default"}),". Alternatively, you can set the ",(0,o.jsx)(n.code,{children:"NEBULA_PROFILE"})," environment variable to specify the profile."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,o.jsx)(l.A,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1844:(e,n,t)=>{t.d(n,{A:()=>N});var o=t(758),i=t(3526),l=t(2835),r=t(5976),s=t(1840);const c=["zero","one","two","few","many","other"];function a(e){return c.filter((n=>e.includes(n)))}const d={locale:"en",pluralForms:a(["one","other"]),select:e=>1===e?"one":"other"};function u(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,o.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:a(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),d}}),[e])}function h(){const e=u();return{selectMessage:(n,t)=>function(e,n,t){const o=e.split("|");if(1===o.length)return o[0];o.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${o.length}: ${e}`);const i=t.select(n),l=t.pluralForms.indexOf(i);return o[Math.min(l,o.length-1)]}(t,n,e)}}var m=t(3696),f=t(4053),p=t(3617);const x={cardContainer:"cardContainer_TxaC",cardTitle:"cardTitle_HmTl",cardDescription:"cardDescription_kT2o"};var g=t(6070);function b(e){let{href:n,children:t}=e;return(0,g.jsx)(r.A,{href:n,className:(0,i.A)("card padding--lg",x.cardContainer),children:t})}function j(e){let{href:n,icon:t,title:o,description:l}=e;return(0,g.jsxs)(b,{href:n,children:[(0,g.jsxs)(p.A,{as:"h2",className:(0,i.A)("text--truncate",x.cardTitle),title:o,children:[t," ",o]}),l&&(0,g.jsx)("p",{className:(0,i.A)("text--truncate",x.cardDescription),title:l,children:l})]})}function v(e){let{item:n}=e;const t=(0,l.Nr)(n),o=function(){const{selectMessage:e}=h();return n=>e(n,(0,f.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,g.jsx)(j,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??o(n.items.length)}):null}function y(e){let{item:n}=e;const t=(0,m.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,l.cC)(n.docId??void 0);return(0,g.jsx)(j,{href:n.href,icon:t,title:n.label,description:n.description??o?.description})}function C(e){let{item:n}=e;switch(n.type){case"link":return(0,g.jsx)(y,{item:n});case"category":return(0,g.jsx)(v,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function w(e){let{className:n}=e;const t=(0,l.$S)();return(0,g.jsx)(N,{items:t.items,className:n})}function N(e){const{items:n,className:t}=e;if(!n)return(0,g.jsx)(w,{...e});const o=(0,l.d1)(n);return(0,g.jsx)("section",{className:(0,i.A)("row",t),children:o.map(((e,n)=>(0,g.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,g.jsx)(C,{item:e})},n)))})}},1503:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(758);const i={},l=o.createContext(i);function r(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);