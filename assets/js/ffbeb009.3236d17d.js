"use strict";(self.webpackChunknebula_docs=self.webpackChunknebula_docs||[]).push([[6511],{5581:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var s=i(6070),t=i(1503),r=i(32),a=i(451);const o={},l="Authorization Configuration Guide",c={id:"config/authorization",title:"Authorization Configuration Guide",description:"The Authorization server is a critical component of Nebula, responsible for identifying and authenticating users through various identity providers (IdPs) and managing machine identities. This guide provides a detailed explanation of the Authorization configuration file, enabling you to tailor Nebula to your specific environment and requirements.",source:"@site/versioned_docs/version-0.0.1/config/authorization.mdx",sourceDirName:"config",slug:"/config/authorization",permalink:"/nebula/docs/config/authorization",draft:!1,unlisted:!1,editUrl:"https://github.com/CremitHQ/nebula/tree/main/docs/docs/versioned_docs/version-0.0.1/config/authorization.mdx",tags:[],version:"0.0.1",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Backbone server",permalink:"/nebula/docs/config/backbone"},next:{title:"Authority server",permalink:"/nebula/docs/config/authority"}},d={},h=[{value:"Configuration File Overview",id:"configuration-file-overview",level:2},{value:"Configuration Details",id:"configuration-details",level:2},{value:"Port",id:"port",level:3},{value:"Base URL",id:"base-url",level:3},{value:"(Optional) Path Prefix",id:"optional-path-prefix",level:3},{value:"(Optional) Token Configuration",id:"optional-token-configuration",level:3},{value:"Token Lifetime",id:"token-lifetime",level:4},{value:"JWKs",id:"jwks",level:4},{value:"JWK key ID",id:"jwk-key-id",level:4},{value:"Database Configuration",id:"database-configuration",level:3},{value:"Host",id:"host",level:4},{value:"Port",id:"port-1",level:4},{value:"Database Name",id:"database-name",level:4},{value:"Authentication Method",id:"authentication-method",level:4},{value:"Username",id:"username",level:4},{value:"Password",id:"password",level:4},{value:"Username",id:"username-1",level:4},{value:"CORS Configuration",id:"cors-configuration",level:3},{value:"Upstream IdP Configuration",id:"upstream-idp-configuration",level:3},{value:"SSO URL",id:"sso-url",level:4},{value:"IdP Issuer",id:"idp-issuer",level:4},{value:"Entity ID",id:"entity-id",level:4},{value:"CA",id:"ca",level:4},{value:"Attributes",id:"attributes",level:4},{value:"Admin Role",id:"admin-role",level:4},{value:"Workspace Configuration",id:"workspace-configuration",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authorization-configuration-guide",children:"Authorization Configuration Guide"})}),"\n",(0,s.jsx)(n.p,{children:"The Authorization server is a critical component of Nebula, responsible for identifying and authenticating users through various identity providers (IdPs) and managing machine identities. This guide provides a detailed explanation of the Authorization configuration file, enabling you to tailor Nebula to your specific environment and requirements."}),"\n",(0,s.jsx)(n.h2,{id:"configuration-file-overview",children:"Configuration File Overview"}),"\n",(0,s.jsx)(n.p,{children:"Below is an example of an Authorization configuration file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'port = 9000\n\nbase_url = "http://localhost:9000" # External URL of the authorization server\n\n[database]\nhost = "db"\nport = 5432\ndatabase_name = "postgres"\nauth.method = "CREDENTIAL"\nauth.username = "postgres"\nauth.password = "password"\n\n[upstream_idp]\ntype = "SAML"\nsso_url = "<fill in your IdP single sign-on URL>"\nidp_issuer = "<fill in your IdP issuer URL>"\nentity_id = "<fill in your entity ID>"\nca = "<fill in you CA>" # ex) "-----BEGIN CERTIFICATE-----\\nblabla...\\n...blabla\\n-----END CERTIFICATE-----"\nattributes = { type = "ALL" } # or { type = "MAPPING", claims = [["email_from_idp", "email"], ["name_from_idp", "derived_name"]] }\nadmin_role.type = "ALL"\n\n# or "GROUP" if you want to specify the admin role by the group claim\n# admin_role.type = "GROUP"\n# admin_role.attribute_name = "group"\n# admin_role.admin_groups = ["ADMINSTRATOR"]\n\n[workspace]\ntype = "STATIC"\nname = "default" # Change this to the name of your workspace\n\n# or "CLAIM" if you want to specify the workspace by the claim value\n# [workspace]\n# type = "CLAIM"\n# claim = "workspace" # Change this to the claim key of your workspace\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This configuration file is written in ",(0,s.jsx)(n.a,{href:"https://toml.io/",children:"TOML"})," format and is divided into several sections."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"configuration-details",children:"Configuration Details"}),"\n",(0,s.jsx)(n.h3,{id:"port",children:"Port"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"port"})," specifies the port on which the Backbone server listens for incoming requests."]}),"\n",(0,s.jsx)(n.h3,{id:"base-url",children:"Base URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"base_url"})," is the external URL where the Authorization server is accessible. This URL is used to construct the redirect URL for the Identity Provider (IdP). It is also used to construct the JWKs endpoint in JWT."]}),"\n",(0,s.jsx)(n.h3,{id:"optional-path-prefix",children:"(Optional) Path Prefix"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"path_prefix"})," specifies the path prefix for the Authorization server. This is useful when the Authorization server is behind a reverse proxy or load balancer."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'path_prefix = "/auth"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"optional-token-configuration",children:"(Optional) Token Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[token]"})," section configures the token settings for the Authorization server."]}),"\n",(0,s.jsx)(n.h4,{id:"token-lifetime",children:"Token Lifetime"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"token.lifetime"})," specifies the lifetime of the JWT token in seconds."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default: ",(0,s.jsx)(n.code,{children:"6 * 3600"})," seconds (6 hours)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"jwks",children:"JWKs"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"token.jwks"})," specifies the JSON Web Key Set (JWKS) used for token verification. This is useful when you want to use a custom JWKS endpoint."]}),"\n",(0,s.jsx)(n.p,{children:"JWKs contain a keys array, where each key includes the following fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kty"}),": Key type (e.g. RSA, EC)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"crv"}),": Curve (used only for EC key type)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"d"}),": Private key"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x"}),": X coordinate (EC key type only)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"y"}),": Y coordinate (EC key type only)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alg"}),": Algorithm (e.g. RS256, ES256)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kid"}),": Key Identifier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"use"}),": Key usage (e.g. sig, enc)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[[token.jwks.keys]]\nkty = "EC"\ncrv = "P-256"\nd = "~~"\nx = "~~"\ny = "~~"\nalg = "ES256"\nkid = "default-key"\nuse = "sig"\n\n[[token.jwks.keys]]\nkty = "EC"\ncrv = "P-256"\nd = "~~"\nx = "~~"\ny = "~~"\nalg = "ES256"\nkid = "aux-key"\nuse = "sig"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"jwk-key-id",children:"JWK key ID"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"token.jwk_kid"})," specifies the key ID used for token issuance when signing the JWT token."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Make sure that the ",(0,s.jsx)(n.code,{children:"token.jwk_kid"})," matches the ",(0,s.jsx)(n.code,{children:"kid"})," field in one of the JWks."]})}),"\n",(0,s.jsx)(n.h3,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[database]"})," section configures the connection to the PostgreSQL database used by the Authorization server."]}),"\n",(0,s.jsx)(n.h4,{id:"host",children:"Host"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"host"})," specifies the hostname or IP address of the PostgreSQL database server."]}),"\n",(0,s.jsx)(n.h4,{id:"port-1",children:"Port"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"port"})," specifies the port on which the PostgreSQL database server is listening."]}),"\n",(0,s.jsx)(n.h4,{id:"database-name",children:"Database Name"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"database_name"})," specifies the name of the PostgreSQL database for storing the workspace metadata."]}),"\n",(0,s.jsx)(n.h4,{id:"authentication-method",children:"Authentication Method"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"auth.method"})," specifies the authentication method used to connect to the PostgreSQL database. The available options are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CREDENTIAL"}),": Uses a username and password for authentication."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RDS_IAM_AUTH"}),": Uses AWS RDS IAM authentication."]}),"\n"]}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsxs)(a.A,{value:"CREDENTIAL",label:"Credential",children:[(0,s.jsx)(n.h4,{id:"username",children:"Username"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"auth.username"})," specifies the username used to authenticate with the PostgreSQL database."]}),(0,s.jsx)(n.h4,{id:"password",children:"Password"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"auth.password"})," specifies the password used to authenticate with the PostgreSQL database."]})]}),(0,s.jsxs)(a.A,{value:"RDS_IAM_AUTH",label:"AWS RDS IAM",children:[(0,s.jsx)(n.h4,{id:"username-1",children:"Username"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"auth.username"})," specifies the username used to authenticate with the PostgreSQL database."]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"cors-configuration",children:"CORS Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[cors]"})," section allows you to configure Cross-Origin Resource Sharing (CORS) settings for the Backbone server. The available options are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ALLOW_ALL"}),": Allows requests from any origin."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ALLOW_LIST"}),": Allows requests from specific origins. Also, wildcard characters can be used to match multiple origins."]}),"\n"]}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(a.A,{value:"ALLOW_ALL",label:"All Origins",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[cors]\ntype = "ALLOW_ALL"\n'})})}),(0,s.jsxs)(a.A,{value:"ALLOW_LIST",label:"List",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[cors]\ntype = "ALLOW_LIST"\ndomains = ["http://localhost:3000", "https://*.example.com"]\n'})}),(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Wildcard characters should be used only once in the origin URL. (e.g., ",(0,s.jsx)(n.code,{children:"https://*.example.com"}),")."]})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"upstream-idp-configuration",children:"Upstream IdP Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[upstream_idp]"})," section configures the Identity Provider (IdP) settings for the Authorization server. The available options are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SAML"}),": Specifies the IdP settings for SAML-based authentication."]}),"\n"]}),"\n",(0,s.jsx)(r.A,{children:(0,s.jsxs)(a.A,{value:"SAML",label:"SAML",children:[(0,s.jsx)(n.h4,{id:"sso-url",children:"SSO URL"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"sso_url"})," specifies the single sign-on URL of the Identity Provider (IdP)."]}),(0,s.jsx)(n.h4,{id:"idp-issuer",children:"IdP Issuer"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"idp_issuer"})," specifies the issuer URL of the Identity Provider (IdP)."]}),(0,s.jsx)(n.h4,{id:"entity-id",children:"Entity ID"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"entity_id"})," specifies the entity ID of the Authorization server."]}),(0,s.jsx)(n.h4,{id:"ca",children:"CA"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ca"})," specifies the certificate authority (CA) certificate used to verify the IdP's SSL certificate. The CA certificate should be in PEM format."]}),(0,s.jsx)(n.h4,{id:"attributes",children:"Attributes"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"attributes"})," specifies the user attributes to be retrieved from the IdP. The available options are:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ALL"}),": Retrieves all user attributes from the IdP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MAPPING"}),": Maps specific user attributes from the IdP to custom attributes."]}),"\n"]}),(0,s.jsxs)(r.A,{children:[(0,s.jsxs)(a.A,{value:"ALL",label:"All",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"example"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'attributes = { type = "ALL" }\n'})})]}),(0,s.jsxs)(a.A,{value:"MAPPING",label:"Mapping",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"claims"})," specifies the mapping of user attributes from the IdP to custom attributes. The format is a list of tuples, where each tuple follows the pattern:"]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[<from_idp_attribute>, <into_custom_attribute>]"}),"."]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"example"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'attributes = { type = "MAPPING", claims = [["email_from_idp", "email"], ["name_from_idp", "derived_name"]] }\n'})})]})]}),(0,s.jsx)(n.h4,{id:"admin-role",children:"Admin Role"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"admin_role"})," specifies the role required to access the admin panel. The available options are:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ALL"}),": Grants admin access to all users."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GROUP"}),": Grants admin access based on the group claim."]}),"\n"]}),(0,s.jsxs)(r.A,{children:[(0,s.jsx)(a.A,{value:"ALL",label:"All",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'admin_role.type = "ALL"\n'})})}),(0,s.jsxs)(a.A,{value:"GROUP",label:"Group",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"attribute_name"})," specifies the attribute name used for the group claim.\n",(0,s.jsx)(n.code,{children:"admin_groups"})," specifies the list of groups that have admin access."]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"example"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'admin_role.type = "GROUP"\nadmin_role.attribute_name = "group"\nadmin_role.admin_groups = ["ADMINSTRATOR"]\n'})})]})]})]})}),"\n",(0,s.jsx)(n.h3,{id:"workspace-configuration",children:"Workspace Configuration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"[workspace]"})," section configures the workspace settings for the Backbone server. The available options are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"STATIC"}),": Uses a single workspace for all users."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CLAIM"}),": Specifies the workspace by the claim value. This option is useful when you want to assign workspaces based on user claims."]}),"\n"]}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(a.A,{value:"STATIC",label:"Static",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[workspace]\ntype = "STATIC"\nname = "<workspace_name>"\n'})})}),(0,s.jsxs)(a.A,{value:"CLAIM",label:"Claim",children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[workspace]\ntype = "CLAIM"\nclaim = "<claim_key>"\n'})}),(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"You have to create and initialize for each workspace by the claim key in the database."})}),(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Make sure that the claim key must exist in the user's claim."})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},451:(e,n,i)=>{i.d(n,{A:()=>a});i(758);var s=i(3526);const t={tabItem:"tabItem_rTHA"};var r=i(6070);function a(e){let{children:n,hidden:i,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,a),hidden:i,children:n})}},32:(e,n,i)=>{i.d(n,{A:()=>A});var s=i(758),t=i(3526),r=i(388),a=i(5557),o=i(2531),l=i(2673),c=i(6302),d=i(9378);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:s,default:t}}=e;return{value:n,label:i,attributes:s,default:t}}))}(i);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function p(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:i}=e;const t=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,l.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,r=u(e),[a,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=i.find((e=>e.default))??i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,h]=f({queryString:i,groupId:t}),[x,m]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,d.Dv)(i);return[t,(0,s.useCallback)((e=>{i&&r.set(e)}),[i,r])]}({groupId:t}),j=(()=>{const e=c??x;return p({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{j&&l(j)}),[j]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),m(e)}),[h,m,r]),tabValues:r}}var m=i(1409);const j={tabList:"tabList_htd4",tabItem:"tabItem_fdRH"};var g=i(6070);function v(e){let{className:n,block:i,selectedValue:s,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,i=l.indexOf(n),t=o[i].value;t!==s&&(c(n),a(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":i},n),children:o.map((e=>{let{value:n,label:i,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...r,className:(0,t.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":s===n}),children:i??n},n)}))})}function b(e){let{lazy:n,children:i,selectedValue:r}=e;const a=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,t.A)("tabs-container",j.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(b,{...n,...e})]})}function A(e){const n=(0,m.A)();return(0,g.jsx)(y,{...e,children:h(e.children)},String(n))}},1503:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(758);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);