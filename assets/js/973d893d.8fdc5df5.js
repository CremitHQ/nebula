"use strict";(self.webpackChunknebula_docs=self.webpackChunknebula_docs||[]).push([[8194],{3708:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>r});var s=c(6070),o=c(1503);const i={},t="nebula access-condtion",a={id:"cli/command/access-condition",title:"nebula access-condtion",description:"Manage the access conditions for secrets.",source:"@site/versioned_docs/version-0.0.1/cli/command/access-condition.mdx",sourceDirName:"cli/command",slug:"/cli/command/access-condition",permalink:"/nebula/docs/0.0.1/cli/command/access-condition",draft:!1,unlisted:!1,editUrl:"https://github.com/CremitHQ/nebula/tree/main/docs/docs/versioned_docs/version-0.0.1/cli/command/access-condition.mdx",tags:[],version:"0.0.1",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Path",permalink:"/nebula/docs/0.0.1/cli/command/path"},next:{title:"Secret",permalink:"/nebula/docs/0.0.1/cli/command/secret"}},d={},r=[{value:"Subcommands",id:"subcommands",level:2},{value:"<code>nebula access-condition list</code>",id:"nebula-access-condition-list",level:3},{value:"<code>nebula access-condtion create</code>",id:"nebula-access-condtion-create",level:3},{value:"Flags",id:"flags",level:4}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"nebula-access-condtion",children:(0,s.jsx)(n.code,{children:"nebula access-condtion"})})}),"\n",(0,s.jsx)(n.p,{children:"Manage the access conditions for secrets."}),"\n",(0,s.jsx)(n.h2,{id:"subcommands",children:"Subcommands"}),"\n",(0,s.jsx)(n.h3,{id:"nebula-access-condition-list",children:(0,s.jsx)(n.code,{children:"nebula access-condition list"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"nebula access-condition list"})," command lists the access conditions that are registered into the backbone server. The command returns the access condition id, name, and expression of each access condition."]}),"\n",(0,s.jsx)(n.h3,{id:"nebula-access-condtion-create",children:(0,s.jsx)(n.code,{children:"nebula access-condtion create"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"nebula access-condtion create"})," command creates a new access condition in the backbone server."]}),"\n",(0,s.jsx)(n.h4,{id:"flags",children:"Flags"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-n, --name <name>"}),": The name of the access condition. (required)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-e, --expression <expression>"}),": The expression of the access condition. (required)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Expression syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'("<attribute_key>=<attribute_value>@<authority_name>#<version>")\n\nNote:\nThe expression must be enclosed in double quotes.\nThe expression can be a combination of multiple conditions using logical operators (AND, OR).\nIf you didn\'t roll the version, the default version is 1.\n\n\nExample:\n(("group=admin@Authority#1") AND ("role=manager@Authority#1")) OR ("group=infra@Authority#1"))\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1503:(e,n,c)=>{c.d(n,{R:()=>t,x:()=>a});var s=c(758);const o={},i=s.createContext(o);function t(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);